/* 
 * LocationIQ
 *
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Balance {
  #[serde(rename = "status")]
  status: Option<String>,
  #[serde(rename = "balance")]
  balance: Option<::models::Daybalance>
}

impl Balance {
  pub fn new() -> Balance {
    Balance {
      status: None,
      balance: None
    }
  }

  pub fn set_status(&mut self, status: String) {
    self.status = Some(status);
  }

  pub fn with_status(mut self, status: String) -> Balance {
    self.status = Some(status);
    self
  }

  pub fn status(&self) -> Option<&String> {
    self.status.as_ref()
  }

  pub fn reset_status(&mut self) {
    self.status = None;
  }

  pub fn set_balance(&mut self, balance: ::models::Daybalance) {
    self.balance = Some(balance);
  }

  pub fn with_balance(mut self, balance: ::models::Daybalance) -> Balance {
    self.balance = Some(balance);
    self
  }

  pub fn balance(&self) -> Option<&::models::Daybalance> {
    self.balance.as_ref()
  }

  pub fn reset_balance(&mut self) {
    self.balance = None;
  }

}



